{"version":3,"sources":["Header/HeaderOption.js","Header/Logo.js","Header/Header.js","App.js","reportWebVitals.js","reducers/headerReducer.js","reducers/index.js","store.js","index.js"],"names":["OptionField","styled","div","TeamsMenuList","ListElement","TeamsMenuField","ListDivider","HeaderOption","title","useState","teamsMenuActive","setTeamsMenuActive","onMouseEnter","onMouseLeave","LogoField","Logo","HeaderField","HeaderOptionsField","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","headerState","fieldSize","headerReducer","state","action","type","value","combineReducers","store","createStore","reducers","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAGMA,EAAcC,IAAOC,IAAV,mPAcXC,EAAgBF,IAAOC,IAAV,mDAIbE,EAAcH,IAAOC,IAAV,kJASXG,EAAiBJ,IAAOC,IAAV,6HAQdI,EAAcL,IAAOC,IAAV,wEA0BFK,EArBM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,EAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,OACE,eAACX,EAAD,CACEY,aAAc,kBAAMD,GAAmB,IACvCE,aAAc,kBAAMF,GAAmB,IAFzC,UAIE,cAACN,EAAD,UACGK,GACC,eAACP,EAAD,WACE,cAACC,EAAD,qBACA,cAACE,EAAD,IACA,cAACF,EAAD,0BAILI,MCzDDM,G,YAAYb,IAAOC,IAAV,mHAeAa,EARF,WACX,OACE,mCACE,cAACD,EAAD,iCCNAE,EAAcf,IAAOC,IAAV,0EAKXe,EAAqBhB,IAAOC,IAAV,iGA2BTgB,EAnBA,WAOb,OACE,eAACF,EAAD,WACE,cAAC,EAAD,IACA,eAACC,EAAD,WACE,cAAC,EAAD,CAAcT,MAAO,iBACrB,cAAC,EAAD,CAAcA,MAAO,UACrB,cAAC,EAAD,CAAcA,MAAO,qB,MCzBdW,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gCCPDQ,EAAc,CACzBC,UAAW,IAeEC,EAZO,WAAkC,IAAjCC,EAAgC,uDAAxBH,EAAaI,EAAW,uCACrD,OAAQA,EAAOC,MACb,IAAK,oBACH,OAAO,2BACFF,GADL,IAEEF,UAAWG,EAAOE,QAEtB,QACE,OAAOH,ICTEI,cAAgB,CAC7BL,kBCAWM,EAAQC,YAAYC,EAAUC,YAAgBC,MCI3DC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1B1B,M","file":"static/js/main.7a2744d0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\n\r\nconst OptionField = styled.div`\r\n  position: relative;\r\n  font-size: 1.2rem;\r\n  align-self: center;\r\n  cursor: pointer;\r\n  padding: 1.2rem;\r\n  flex-grow: 1;\r\n  color: white;\r\n  text-align: center;\r\n  &:hover {\r\n    background-color: #189e18;\r\n  }\r\n`;\r\n\r\nconst TeamsMenuList = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst ListElement = styled.div`\r\n  padding: 1rem;\r\n  font-size: 1rem;\r\n  background-color: #55945b;\r\n  &:hover {\r\n    background-color: #3f6b43;\r\n  }\r\n`;\r\n\r\nconst TeamsMenuField = styled.div`\r\n  position: absolute;\r\n  margin-top: 2.8rem;\r\n  text-align: center;\r\n  width: 100%;\r\n  left: 0;\r\n`;\r\n\r\nconst ListDivider = styled.div`\r\n  height: 1px;\r\n  background-color: black;\r\n`;\r\n\r\nconst HeaderOption = ({ title }) => {\r\n  const [teamsMenuActive, setTeamsMenuActive] = useState(false);\r\n  return (\r\n    <OptionField\r\n      onMouseEnter={() => setTeamsMenuActive(true)}\r\n      onMouseLeave={() => setTeamsMenuActive(false)}\r\n    >\r\n      <TeamsMenuField>\r\n        {teamsMenuActive && (\r\n          <TeamsMenuList>\r\n            <ListElement>Niemcy</ListElement>\r\n            <ListDivider />\r\n            <ListElement>Anglia</ListElement>\r\n          </TeamsMenuList>\r\n        )}\r\n      </TeamsMenuField>\r\n      {title}\r\n    </OptionField>\r\n  );\r\n};\r\n\r\nexport default HeaderOption;\r\n","import styled from \"styled-components\";\r\n\r\nconst LogoField = styled.div`\r\n  font-size: 1.5rem;\r\n  font-style: italic;\r\n  align-self: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <>\r\n      <LogoField>Football Maniac</LogoField>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import styled from \"styled-components\";\r\nimport HeaderOption from \"./HeaderOption\";\r\nimport Menu, { SubMenu, Item as MenuItem, Divider } from \"rc-menu\";\r\nimport \"rc-menu/assets/index.css\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst HeaderField = styled.div`\r\n  background-color: green;\r\n  display: flex;\r\n`;\r\n\r\nconst HeaderOptionsField = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst optionNames = [\"Drużyny\", \"Mecze\"];\r\n\r\nconst Header = () => {\r\n  const renderOptions = () => {\r\n    return optionNames.map((option) => {\r\n      return <HeaderOption title={option} />;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <HeaderField>\r\n      <Logo />\r\n      <HeaderOptionsField>\r\n        <HeaderOption title={\"Drużyny\"}></HeaderOption>\r\n        <HeaderOption title={\"Mecze\"}></HeaderOption>\r\n        <HeaderOption title={\"O stronie\"}></HeaderOption>\r\n      </HeaderOptionsField>\r\n    </HeaderField>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Header from \"./Header/Header\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  return <Header />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const headerState = {\r\n  fieldSize: 10,\r\n};\r\n\r\nconst headerReducer = (state = headerState, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_FIELD_SIZE\":\r\n      return {\r\n        ...state,\r\n        fieldSize: action.value,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default headerReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport headerReducer from \"./headerReducer\";\r\n\r\nexport default combineReducers({\r\n  headerReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nexport const store = createStore(reducers, applyMiddleware(ReduxThunk));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}